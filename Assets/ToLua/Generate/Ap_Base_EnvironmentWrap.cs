//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Ap_Base_EnvironmentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Ap.Base.Environment), typeof(System.Object));
		L.RegFunction("GetPlatformName", GetPlatformName);
		L.RegFunction("New", _CreateAp_Base_Environment);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AssetBundlesOutputPath", get_AssetBundlesOutputPath, null);
		L.RegVar("DataPath", get_DataPath, null);
		L.RegVar("CachePath", get_CachePath, null);
		L.RegVar("AssetBundleUpdatePath", get_AssetBundleUpdatePath, null);
		L.RegVar("AssetBundlePath", get_AssetBundlePath, null);
		L.RegVar("LuaPath", get_LuaPath, null);
		L.RegVar("LogPath", get_LogPath, null);
		L.RegVar("TempPath", get_TempPath, null);
		L.RegVar("FrameworkPath", get_FrameworkPath, null);
		L.RegVar("Platform", get_Platform, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAp_Base_Environment(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Ap.Base.Environment obj = new Ap.Base.Environment();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Ap.Base.Environment.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlatformName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = Ap.Base.Environment.GetPlatformName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssetBundlesOutputPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.AssetBundlesOutputPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DataPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.DataPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CachePath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.CachePath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssetBundleUpdatePath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.AssetBundleUpdatePath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssetBundlePath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.AssetBundlePath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.LuaPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LogPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.LogPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TempPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.TempPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FrameworkPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Ap.Base.Environment.FrameworkPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Platform(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Ap.Base.Environment.Platform);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

