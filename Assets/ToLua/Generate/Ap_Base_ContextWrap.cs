//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Ap_Base_ContextWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Ap.Base.Context), typeof(Ap.Base.SingletonBase<Ap.Base.Context>));
		L.RegFunction("Clear", Clear);
		L.RegFunction("New", _CreateAp_Base_Context);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ServerIp", get_ServerIp, set_ServerIp);
		L.RegVar("ServerPort", get_ServerPort, set_ServerPort);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAp_Base_Context(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Ap.Base.Context obj = new Ap.Base.Context();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Ap.Base.Context.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Ap.Base.Context obj = (Ap.Base.Context)ToLua.CheckObject<Ap.Base.Context>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerIp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Ap.Base.Context obj = (Ap.Base.Context)o;
			string ret = obj.ServerIp;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ServerIp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerPort(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Ap.Base.Context obj = (Ap.Base.Context)o;
			int ret = obj.ServerPort;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ServerPort on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ServerIp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Ap.Base.Context obj = (Ap.Base.Context)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ServerIp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ServerIp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ServerPort(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Ap.Base.Context obj = (Ap.Base.Context)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ServerPort = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ServerPort on a nil value");
		}
	}
}

